plugins {
  id "com.github.ben-manes.versions" version "0.46.0"
  id 'java-library'
  id 'application'
  id 'maven-publish'
  id 'signing'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots' }
}

ext.junitJupiterVersion = '5.9.2'

group = 'com.github.calimero'
version = '2.6-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

java {
    withSourcesJar()
    withJavadocJar()

    registerFeature('serial') {
        usingSourceSet(sourceSets.main)
    }
    registerFeature('usb') {
        usingSourceSet(sourceSets.main)
    }
}

tasks.withType(Jar).configureEach {
    from("${projectDir}") {
        include 'LICENSE.txt'
        into "META-INF"
    }
    if (name.equals('sourcesJar')) {
        from("${projectDir}") {
            include 'README.md'
        }
    }
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

mainClassName = 'tuwien.auto.calimero.server.Launcher'

run {
    standardInput = System.in
}

compileJava.options*.compilerArgs = [
	'-Xlint:all,-serial'
]

compileTestJava.options*.compilerArgs = [
	'-Xlint:all',
	'-Xlint:-try',
]

sourceSets {
    main {
        java.srcDir 'src'
        resources.srcDir 'resources'
    }
    test {
        java.srcDirs = [ 'test' ]
        file('build/classes/test').mkdirs()
        runtimeClasspath = runtimeClasspath + files('build/classes/test')
    }
}

tasks.withType(Javadoc).configureEach {
    options.addStringOption("Xdoclint:-missing", '-quiet')
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

test {
	useJUnitPlatform()
}

dependencies {
    api "com.github.calimero:calimero-core:${version}"
    api "com.github.calimero:calimero-device:${version}"

    implementation 'org.slf4j:slf4j-api:1.7.36'
    runtimeOnly 'org.slf4j:slf4j-simple:1.7.36'

	serialRuntimeOnly "com.github.calimero:calimero-rxtx:${version}"
	serialRuntimeOnly "com.github.calimero:serial-native:${version}"
	usbRuntimeOnly "io.calimero:calimero-usb:${version}"

	testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
}

distTar {
    duplicatesStrategy = 'EXCLUDE'
}

distZip {
    duplicatesStrategy = 'EXCLUDE'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name
            from components.java
            pom {
                name = 'Calimero KNXnet/IP Server'
                description = 'Calimero KNXnet/IP server is a free KNX network server'
                url = 'https://github.com/calimero-project/calimero-server'
                inceptionYear = '2006'
                licenses {
                    license {
                        name = "GNU General Public License, version 2, with the Classpath Exception"
                        url = 'LICENSE.txt'
                    }
                }
                developers {
                    developer {
                        name = "Boris Malinowsky"
                        email = "b.malinowsky@gmail.com"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/calimero-project/calimero-server.git'
                    url = 'https://github.com/calimero-project/calimero-server.git'
                }
            }
        }
    }
    repositories {
        maven {
            name 'maven'
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(PasswordCredentials)
        }
    }
}

signing {
    if (project.hasProperty("signing.keyId")) {
        sign publishing.publications.mavenJava
    }
}
